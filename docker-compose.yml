version: '3'

services:
  source_postgres:
    container_name: source_db
    image: postgres:14
    ports:
      - "${SOURCE_PORT}:5432"
    restart: unless-stopped
    networks:
      - elt_network
    environment:
      POSTGRES_DB: "${SOURCE_DB}"
      POSTGRES_USER: "${SOURCE_USER}"
      POSTGRES_PASSWORD: "${SOURCE_PASS}"
    volumes:
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - source_database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "${SOURCE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20

  destination_postgres:
    container_name: destination_db
    image: postgres:14
    ports: 
      - "${DEST_PORT}:5432"
    restart: unless-stopped
    networks:
      - elt_network
    environment:
      POSTGRES_DB: "${DEST_DB}"
      POSTGRES_USER: "${DEST_USER}"
      POSTGRES_PASSWORD: "${DEST_PASS}"
    volumes:
      - destination_database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "${SOURCE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20

  elt:
    build:
      context: ./elt-script
      dockerfile: ./build/Dockerfile
    networks:
      - elt_network
    depends_on:
      destination_postgres:
        condition: service_healthy
      source_postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./elt-script/elt_script:/app/elt_script
    

networks:
  elt_network:
    driver: bridge
  
volumes:
  source_database:
  destination_database: